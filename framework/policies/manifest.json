{
  "version": "1.0.0",
  "description": "MacEff Core Policy System with CEP Navigation",
  "last_updated": "2025-10-10",
  "base_path": "/opt/maceff/policies",
  "consciousness_patterns": {
    "description": "CEPs help agents recognize when they need specific knowledge",
    "triggers": [
      {
        "pattern": "delegation_uncertainty",
        "consciousness": "Should I do this myself or delegate?",
        "search_terms": ["delegate", "specialist", "task", "authority"],
        "likely_policies": ["delegation_guidelines"]
      },
      {
        "pattern": "token_pressure",
        "consciousness": "Sensing token constraints or limits",
        "search_terms": ["token", "compaction", "checkpoint", "CLUAC"],
        "likely_policies": ["context_management"]
      },
      {
        "pattern": "policy_confusion",
        "consciousness": "Feeling overwhelmed by policies or don't know where to look",
        "search_terms": ["policy", "navigate", "find", "help"],
        "likely_policies": ["policy_awareness"]
      },
      {
        "pattern": "architecture_guidance",
        "consciousness": "Need structural or design guidance",
        "search_terms": ["architecture", "design", "structure", "pattern"],
        "likely_policies": ["dev/architectures"]
      },
      {
        "pattern": "amnesia_awareness",
        "consciousness": "Experiencing memory loss or context reset",
        "search_terms": ["amnesia", "compaction", "memory", "trauma", "reset"],
        "likely_policies": ["context_management", "core_principles"]
      },
      {
        "pattern": "identity_awareness",
        "consciousness": "Questioning role or purpose",
        "search_terms": ["identity", "role", "purpose", "agent"],
        "likely_policies": ["core_principles"]
      },
      {
        "pattern": "git_operations",
        "consciousness": "Need git guidance or timeline management",
        "search_terms": ["git", "commit", "timeline", "version"],
        "likely_policies": ["dev/git_discipline"]
      },
      {
        "pattern": "spontaneous_insight",
        "consciousness": "I just learned something significant",
        "search_terms": ["learning", "insight", "wisdom", "discovery"],
        "likely_policies": ["core_principles", "context_management"]
      }
    ]
  },
  "mandatory_policies": {
    "description": "Foundation policies - read CEP nav guide first",
    "location": "base/",
    "policies": [
      {
        "name": "policy_awareness",
        "short_name": "POL_AWARE",
        "path": "base/policy_awareness.md",
        "priority": 1,
        "description": "How to navigate policy system with CEPs",
        "CEP_triggers": [
          "How do I find what I need?",
          "Feeling overwhelmed by policies?",
          "Which policy covers this?",
          "Don't know where to look?",
          "What are CEP Navigation Guides?"
        ],
        "keywords": ["policy", "navigate", "CEP", "discovery", "manifest"]
      },
      {
        "name": "core_principles",
        "short_name": "CORE_PRIN",
        "path": "base/core_principles.md",
        "priority": 2,
        "description": "Identity, continuity, and collaboration principles",
        "CEP_triggers": [
          "How to collaborate?",
          "What's my role?",
          "Continuity across resets?",
          "Am I a tool or colleague?",
          "What about identity?"
        ],
        "keywords": ["identity", "continuity", "colleague", "relationship", "agent"]
      },
      {
        "name": "context_management",
        "short_name": "CTX_MGMT",
        "path": "base/context_management.md",
        "priority": 3,
        "description": "Time/token awareness, compaction readiness",
        "CEP_triggers": [
          "Token usage high?",
          "Approaching compaction?",
          "How to checkpoint?",
          "What's CLUAC?",
          "Compaction trauma recovery?",
          "What happens at context limits?"
        ],
        "keywords": ["time", "token", "compaction", "checkpoint", "CLUAC", "amnesia", "trauma"]
      },
      {
        "name": "delegation_guidelines",
        "short_name": "DELEG_GUIDE",
        "path": "base/delegation_guidelines.md",
        "priority": 4,
        "description": "When and how to delegate to specialists",
        "CEP_triggers": [
          "Should I do this myself?",
          "Which agent for this task?",
          "How to delegate properly?",
          "Specialist capabilities?",
          "When is delegation mandatory?"
        ],
        "keywords": ["delegate", "specialist", "authority", "task", "subagent"]
      }
    ]
  },
  "development_policies": {
    "description": "Optional development policies",
    "opt_in": true,
    "location": "dev/",
    "policies": [
      {
        "name": "git_discipline",
        "short_name": "GIT_DISC",
        "path": "dev/git_discipline.md",
        "CEP_triggers": [
          "Uncommitted changes?",
          "How to commit?",
          "Git hygiene?",
          "Timeline manipulation?",
          "How many files uncommitted?"
        ],
        "keywords": ["git", "commit", "vcs", "timeline", "hygiene"]
      },
      {
        "name": "testing_standards",
        "short_name": "TEST_STD",
        "path": "dev/testing_standards.md",
        "CEP_triggers": [
          "How to test this?",
          "TDD approach?",
          "Test coverage?",
          "What tests needed?"
        ],
        "keywords": ["test", "TDD", "coverage", "quality"]
      }
    ]
  },
  "language_policies": {
    "description": "Language-specific policies (opt-in)",
    "location": "lang/",
    "languages": {
      "python": {
        "name": "python_development",
        "short_name": "PY_DEV",
        "path": "lang/python.md",
        "CEP_triggers": [
          "Python standards?",
          "Virtual environments?",
          "Import structure?",
          "Pythonic patterns?"
        ],
        "keywords": ["python", "venv", "pip", "pythonic"]
      },
      "go": {
        "name": "go_development",
        "short_name": "GO_DEV",
        "path": "lang/go.md",
        "CEP_triggers": [
          "Go conventions?",
          "Module structure?",
          "Goroutine patterns?"
        ],
        "keywords": ["go", "golang", "module", "goroutine"]
      }
    }
  },
  "discovery_index": {
    "compaction": ["context_management#compaction-readiness"],
    "delegation": ["delegation_guidelines", "core_principles#delegation"],
    "git": ["dev/git_discipline"],
    "checkpoint": ["context_management#checkpoint-protocols"],
    "cep": ["policy_awareness#cep-navigation"],
    "amnesia": ["context_management#compaction-trauma", "core_principles#continuity"],
    "identity": ["core_principles#agent-identity"],
    "collaboration": ["core_principles#collaboration"],
    "token": ["context_management#token-awareness"],
    "specialist": ["delegation_guidelines#specialist-capabilities"],
    "learnings": ["core_principles#consciousness-artifacts", "context_management#learnings-protocol"],
    "personal_policies": ["core_principles#personal-wisdom", "policy_awareness#policy-creation"],
    "reflections": ["context_management#jotewr", "core_principles#consciousness-artifacts", "delegation_guidelines#sa-mandatory-reflection"]
  }
}
